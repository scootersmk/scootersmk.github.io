<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Scott Koch</title><link href="http://www.scott-koch.com/" rel="alternate"></link><link href="http://www.scott-koch.com/feeds/all.atom.xml" rel="self"></link><id>http://www.scott-koch.com/</id><updated>2018-12-01T11:00:00-05:00</updated><entry><title>Using the Strace Rule for quicker troubleshooting and debugging of problems on Linux</title><link href="http://www.scott-koch.com/using-the-strace-rule-for-quicker-troubleshooting-and-debugging-of-problems-on-linux.html" rel="alternate"></link><published>2018-12-01T11:00:00-05:00</published><updated>2018-12-01T11:00:00-05:00</updated><author><name>Scott M. Koch</name></author><id>tag:www.scott-koch.com,2018-12-01:/using-the-strace-rule-for-quicker-troubleshooting-and-debugging-of-problems-on-linux.html</id><summary type="html">&lt;p&gt;Over the years troubleshooting many different problems on Linux/UNIX
I have developed a personal rule of sorts to help me troubleshoot
problems faster and avoid loosing time by going down the wrong path.
I had a bad habit of after doing some basic troubleshooting of a
problem and not …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Over the years troubleshooting many different problems on Linux/UNIX
I have developed a personal rule of sorts to help me troubleshoot
problems faster and avoid loosing time by going down the wrong path.
I had a bad habit of after doing some basic troubleshooting of a
problem and not seeing any indication of cause, I would all of a
sudden jump to using strace to troubleshoot the problem further.
Sometimes I would get lucky and the root-cause of the problem would
be revealed by the strace output. While other times it would lead
to sometimes an hour or more of wadeing through output, reading man
pages of system calls, and chasing down things that looked like
they may be errors but either weren't or were unrelated to the
problem at hand.&lt;/p&gt;
&lt;p&gt;So one day when I would lost in strace output, this rule occured to me:&lt;/p&gt;
&lt;p&gt;If I am using strace to troubleshoot a problem, then the chances
are I'm in too deep and need to take a step back and re-evaluate
the problem and my toubleshooting options.&lt;/p&gt;
&lt;p&gt;The power and usefulness of strace are also the reasons its shouldn't
be your goto tool for troubleshooting. You can easily miss the exact
cause of your problem in all the output. You can notice another
error or strange behavior and get distracted trying to understand
that scenario. You can get a false sense of making progress or
gaining understanding about a problem, which isn't really leading
to solving the problem.&lt;/p&gt;
&lt;p&gt;Now when I catch myself breaking or about to break my rule, I stop
and re-evaluate the problem and start asking myself some questions
like the following:.
  - Do I understand the problem correctly, its impact, and its full scope(when, where, how, etc)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Have I exausted all non-strace methods in troubleshoot especially
  basic things like resource contraints, permissions issues, log
  file output, problems with dependent systems, information from
  monitoring/metrics systems, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Can I change something about the problem to understand the scope
  of the problem(different user, different OS version, different
  software version, different network, etc)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Is there another resource I can utilize to ensure I'm on the
  right course, such as a co-worker, online community, etc. Sometimes
  the act of preparing to describe the problem(by writing it down) to
  someone helps you realize that missing piece of knowledge that you
  needed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is not to say that you should be discouraged from using strace
to help you solve your problems. I would just recommend you try to
only use strace when you have a specific aspect to examine that you
can target your attention to. This way you figure out exactly what
you wanted to know without getting distracted or wasting time dealing
with a ton of output. Some recomendations here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Does the problem still occur when you strace it. Do the following
  to grab the strace output into a file, but ensure the problem
  still actually occurs before you spend time looking at the data.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ strace -f -o strace.out /usr/bin/ps
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Are you interested in a certain type of system call, such as
  network activity(connect/send/recv) or file
  I/O(stat,open,read,write,close), that you can filter your search
  on.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ strace -f -o telnet.out -e connect /usr/bin/telnet www.google.com &lt;span class="m"&gt;80&lt;/span&gt;
&lt;span class="c1"&gt;#OR&lt;/span&gt;
$ strace -f -o cat.out -e open,read,close /usr/bin/cat /etc/resolv.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Are you interested in the timeing of the problem or understanding what part of the problem is taking so long&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#Shows how long each system call took
$ strace -f -T -o cat.out /usr/bin/cat /etc/resolv.conf
#Shows statistics of each system call including times called, average time, and percent of total time
$ strace -f -cw -o cat.out /usr/bin/cat /etc/resolv.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I think a similar rule could be stated for other debugging tools that have
the potential to present you with a overwelming amount of data that
you are then left to sort through or visually parse. Some other instances that I can think of:
- TCPdump network packet traces on high traffic systems/networks
- Opting to turn on as much debugging output as possible from a program
- Log output from one of more busy services or systems&lt;/p&gt;
&lt;p&gt;Remember there is nothing wrong with any of these tools as they are
great ways to get more information about what is going on. However
proceed cautiously on how and when you choose to use them such that
you don't waste valueble time dealing with the flood of data these
tools can produce. &lt;/p&gt;
&lt;p&gt;I hope sharing this rule will help others troubleshoot and debug
problems more efficiently.&lt;/p&gt;</content></entry><entry><title>LISA 2017</title><link href="http://www.scott-koch.com/lisa-2017.html" rel="alternate"></link><published>2017-12-03T15:00:00-05:00</published><updated>2017-12-03T15:00:00-05:00</updated><author><name>Scott M. Koch</name></author><id>tag:www.scott-koch.com,2017-12-03:/lisa-2017.html</id><summary type="html">&lt;p&gt;This was my 9th time attending the &lt;a href="https://www.usenix.org/conference/lisa17"&gt;Large Installation System
Administration(LISA) Conference&lt;/a&gt;
this year in San Francisco. I have been pleased with both the quality and
variety of the conference content the past 2 years. They seem to be doing
a great job finding new speakers each year that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This was my 9th time attending the &lt;a href="https://www.usenix.org/conference/lisa17"&gt;Large Installation System
Administration(LISA) Conference&lt;/a&gt;
this year in San Francisco. I have been pleased with both the quality and
variety of the conference content the past 2 years. They seem to be doing
a great job finding new speakers each year that help shape the conference
to address the current issues and technologies in the field. This was
probably my favorite venue for LISA as the conference hotel was steps
from the embarcaderro ferry building, so it was conveinient place to
find food, go for a run, or get on public transportation to get to other
parts of the city.&lt;/p&gt;
&lt;p&gt;The conference is broken up into the first 3 days there are half
and full day tutorials, which are training classes on a particular topic,
and the last 3 days in the technical sessions where you can choose to
attend talks, paper presentations, and mini tutorials. I touch on some
of the highlights from the sessions I attended.&lt;/p&gt;
&lt;h2&gt;Tutorial: Hands-On Intro to Kubernetes&lt;/h2&gt;
&lt;p&gt;Instructor: Ryan Jarvinen, Red Hat&lt;/p&gt;
&lt;p&gt;Slides: &lt;a href="http://gist-reveal.it/bit.ly/lisa17-k8s#/S1-Hands-On-Intro-to-Kubernetes"&gt;http://gist-reveal.it/bit.ly/lisa17-k8s#/S1-Hands-On-Intro-to-Kubernetes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We are starting to use RedHat OpenShift work, which is based on Kubernetes, so
I was already familiar with Kubernetes on somewhat of a novice
level. Kubernetes was probably the biggest buzz word of the conference as
a lot of tech businesses starting to incorporate containers into theier
infrastructure, and Kubernetes is one of the more popular management
frameworks. This class gave a quick introduction of the concepts, design,
and common features. Then the meat of the class was a hands on lab using
minikube. Minikube, and the corresponding RedHat offering minishift, are
great ways to get hands on experience using these complex technologies
as they can be quickly and easily installed on your laptop or
workstation. This class helped me reenforce some of my basic knowledge and
get a little more hand-on experience deploying software using Kubernetes
and debugging issues related to problems encountered along the way.&lt;/p&gt;
&lt;h2&gt;Tutorial: Getting Started with Docker and Containers&lt;/h2&gt;
&lt;p&gt;Instructor: Jérôme Petazzoni, Docker Inc. &lt;/p&gt;
&lt;p&gt;Slides: &lt;a href="http://container.training/"&gt;http://container.training/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Of all the conferences I have been too, and all the issues in dealing
with conference wifi unreliablity, this was the smoothest run hands-on
lab I can remember taking part in. The instructor had pre-provisioned a
ubuntu based cloud(not sure which one) VM that was preconfigured with
docker, so all we had to do was login, and we could imediately start
doing productive work as part of the lab. The layout of this tutorial
was good mix of introductory material and advanced concepts, and was
exactly the kind of tutorial I was looking for to get myself caught-up
on the docker technology. He covered all the key concepts of docker,
and present some useful examples on how to use docker as a personal
development environment. I walked away with a lot more knowledge and
confidence to use docker in my day to day work.&lt;/p&gt;
&lt;h2&gt;Tutorial: Git Foundations: Unlocking the Mysteries&lt;/h2&gt;
&lt;p&gt;Instructor: Mike Weilgart, Vertical Sysadmin, Inc.&lt;/p&gt;
&lt;p&gt;Similar to the docker tutorial above, this was also a good mix of
introductory concepts, advanced concepts, and hands-on labs that increased
my experience and confidence of using git. While I used git every day at
work, I still consider myself a novice, but the labs in this class helped
me feel a bit more comfortable and knowledgable of the git commands and
how to use them better.&lt;/p&gt;
&lt;h2&gt;Tutorial: Troubleshooting Performance Issues in PostgreSQL&lt;/h2&gt;
&lt;p&gt;Instructor: Camille Baldock, Salesforce&lt;/p&gt;
&lt;p&gt;While its still unclear how much PostgreSQL we will end up using at work,
this tutorial helped lessen my worries of venturing away from our "Only
use one type of RDBM"(which is MySQL/mariadb) at work. Its very easy for
a tutorial covering a advanced/detailed topic to get boring/overwhelming
for those not already familiar with the technology, but I thought this
class was designed well to avoid that and keep everyone engaged. The
instructor gave a detailed yet understandable explanation of every phase
of a query to a PostgreSQL database, which layed out the framework for
how to understand and address performance issues.&lt;/p&gt;
&lt;h2&gt;Talk: ChatOps at Shopify: Inviting Bots in Our Day-to-Day Operations&lt;/h2&gt;
&lt;p&gt;This talked covered several real-world examples of how Shopify is using
ChatOps in the day-to-day operations to handle incidents, make major
techical changes(failovers), and improve documentation and
communication. We have talked a some recently at work of using more
ChatOps techniques, but have always been unsure of where/how to
start. This talk gave me some examples and ideas on how we could get
started using ChatOps at work.&lt;/p&gt;
&lt;h2&gt;Talk: "Don't You Know Who I Am?!" The Danger of Celebrity in Tech&lt;/h2&gt;
&lt;p&gt;This was one of my all time favorite conference talks, and one I really
needed to hear. It convered, in a very entertaining yet blunt way, two
major problems with conferences. The first being the misconception
that what the largest tech companies(Google, Facebook, Netflix,
etc.) are doing is THE RIGHT WAY to do things and everything else is
wrong or out-dated. The second, yet related issues, was discussing the
appropriate way to interact with speakers and other conference attendees
in a respectful way. This should be required viewing for anyone attending
a technical conference.&lt;/p&gt;
&lt;h2&gt;Talk: Managing SSH Access without Managing SSH Keys&lt;/h2&gt;
&lt;p&gt;This was my favorite talk about a technical subject in that it was all
about delivering the content and no unneeded filler to distract from
the point. He briefly described the issue he was solving in the all too
common scenario of an unmanagable mess of ssh keys granting permissions
to your systems. He then explained how they had solved the issue using
OpenSSH Certificates with short lifespans by default, and a custom piece
of software called &lt;a href="https://github.com/nsheridan/cashier"&gt;Cashier&lt;/a&gt; that
they used as an interface to obtaining and revoking certificates. It
was a great talk demonstrating the significant improvement in security
you can obtain by leveraging this new technology and a little bit of
glue software. It was great to see how you can go to having all these
keys out there that have 24/7 access to your systems and are in unknown
hands, to a scenario where access is only possible for the few short
hours its needed, and the rest of the time no access is possible(since
nobody needs it).&lt;/p&gt;
&lt;h2&gt;Other Takeaways:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Everyone is using slack.com for their internal chat&lt;/li&gt;
&lt;li&gt;A lot of intro/basics about containers, but not much advanced topics, which likely means fewer people(minority) are using them than it seems(majority). &lt;/li&gt;
&lt;li&gt;Everyone is hiring, no shortage of system administration jobs&lt;/li&gt;
&lt;li&gt;Security is still a problem that not many people want to talk about&lt;/li&gt;
&lt;li&gt;The sysadmin profession is still young, but I am starting to see it mature in starting to address important issues(diversity, integrity, burn-out, etc) that will be key to the profession to continue to become more legitamite.&lt;/li&gt;
&lt;/ul&gt;</content></entry></feed>